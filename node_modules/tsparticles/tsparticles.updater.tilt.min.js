/*! tsParticles v1.39.1 by Matteo Bruni */
!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var o=e();for(var n in o)("object"==typeof exports?exports:t)[n]=o[n]}}(window,(function(){return function(){"use strict";var t={d:function(e,o){for(var n in o)t.o(o,n)&&!t.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:o[n]})},o:function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r:function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};t.r(e),t.d(e,{loadTiltUpdater:function(){return u}});class o{}o.generatedAttribute="generated",o.randomColorValue="random",o.midColorValue="mid",o.touchEndEvent="touchend",o.mouseDownEvent="mousedown",o.mouseUpEvent="mouseup",o.mouseMoveEvent="mousemove",o.touchStartEvent="touchstart",o.touchMoveEvent="touchmove",o.mouseLeaveEvent="mouseleave",o.mouseOutEvent="mouseout",o.touchCancelEvent="touchcancel",o.resizeEvent="resize",o.visibilityChangeEvent="visibilitychange",o.noPolygonDataLoaded="No polygon data loaded.",o.noPolygonFound="No polygon found, you need to specify SVG url in config.";new Map,new Map,new Map,new Map,new Map,new Map,new Map;new WeakSet;function n(t){return"number"==typeof t?t:function(t){const e=a(t);let o=i(t);return e===o&&(o=0),Math.random()*(e-o)+o}(t)}function i(t){return"number"==typeof t?t:t.min}function a(t){return"number"==typeof t?t:t.max}class r{constructor(t){this.container=t}init(t){const e=t.options.tilt;t.tilt={enable:e.enable,value:n(e.value)*Math.PI/180,sinDirection:Math.random()>=.5?1:-1,cosDirection:Math.random()>=.5?1:-1};let o=e.direction;if("random"===o){o=Math.floor(2*Math.random())>0?"counter-clockwise":"clockwise"}switch(o){case"counter-clockwise":case"counterClockwise":t.tilt.status=1;break;case"clockwise":t.tilt.status=0}const i=t.options.tilt.animation;i.enable&&(t.tilt.velocity=i.speed/360*this.container.retina.reduceFactor,i.sync||(t.tilt.velocity*=Math.random()))}isEnabled(t){const e=t.options.tilt.animation;return!t.destroyed&&!t.spawning&&e.enable}update(t,e){this.isEnabled(t)&&function(t,e){var o;if(!t.tilt)return;const n=t.options.tilt.animation,i=(null!==(o=t.tilt.velocity)&&void 0!==o?o:0)*e.factor,a=2*Math.PI;if(n.enable)switch(t.tilt.status){case 0:t.tilt.value+=i,t.tilt.value>a&&(t.tilt.value-=a);break;case 1:default:t.tilt.value-=i,t.tilt.value<0&&(t.tilt.value+=a)}}(t,e)}}async function u(t){await t.addParticleUpdater("tilt",(t=>new r(t)))}return e}()}));